name: Pull Request Check
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - .gitignore
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'mkdocs.yml'
      - '.gitignore'
    branches:
      - xfers
env:
  GO_VERSION: 1.16
jobs:
  lint:
    name: 'Code linters'
    runs-on: ubuntu-18.04
    steps:
      - name: 'Setup Go ${{ env.GO_VERSION }}'
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: 'Check out project files'
        uses: actions/checkout@v2
        with:
          submodules: false
      - name: 'Prepare environment'
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: 'Run code linters'
        run: |
          GO111MODULE=on make lint

  unit-tests:
    name: 'Unit tests in ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-18.04"]
    env:
      QUORUM_IGNORE_TEST_PACKAGES: github.com/ethereum/go-ethereum/les,github.com/ethereum/go-ethereum/les/flowcontrol,github.com/ethereum/go-ethereum/mobile
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Setup Go ${{ env.GO_VERSION }}'
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: 'Check out project files'
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: 'Prepare environment'
        run: |
          # https://github.com/actions/virtual-environments/issues/798
          sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: 'Run unit tests'
        run: |
          make test

  docker-build:
    name: 'Build Docker image'
    runs-on: ubuntu-18.04
    steps:
      - name: 'Check out project files'
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/quorum
      - name: Add Pull Request SHORT_SHA
        if: github.event_name == 'pull_request'
        run: echo "SHORT_SHA=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_ENV
      - name: Add Push SHORT_SHA
        if: github.event_name == 'push'
        run: echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-7`" >> $GITHUB_ENV
      - name: Set Sha Tag
        id: set-sha-tags
        shell: bash
        run: |
          echo "TAGS=${{ secrets.DOCKER_USERNAME }}/quorum:${{ env.SHORT_SHA }}" >> $GITHUB_ENV
      - name: Set Latest Tag
        id: set-latest-tags
        if: github.ref == 'refs/heads/xfers'
        shell: bash
        run: |
          echo "TAGS=${{ env.TAGS }},${{ secrets.DOCKER_USERNAME }}/quorum:latest" >> $GITHUB_ENV
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.alltools
          pull: true
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/quorum:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/quorum:buildcache,mode=max
          tags: ${{ env.TAGS }}